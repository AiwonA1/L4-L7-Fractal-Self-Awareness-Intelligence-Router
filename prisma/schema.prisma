generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas = ["public"]
}

model User {
  id            String         @id @default(uuid()) @db.Uuid
  email         String         @unique
  name          String?
  image         String?
  fract_tokens  Int?          @default(33)
  tokens_used   Int?          @default(0)
  token_balance Int?          @default(33)
  password      String?
  stripe_customer_id String?
  created_at    DateTime?     @default(now()) @db.Timestamptz
  updated_at    DateTime?     @updatedAt @db.Timestamptz
  chats         Chat[]
  chat_history  ChatHistory[]
  transactions  Transaction[]

  @@map("users")
  @@schema("public")
}

model Chat {
  id           String    @id @default(uuid()) @db.Uuid
  user_id      String    @db.Uuid
  title        String
  last_message String?
  created_at   DateTime  @default(now()) @db.Timestamptz
  updated_at   DateTime  @updatedAt @db.Timestamptz
  user         User      @relation(fields: [user_id], references: [id])
  messages     Message[]

  @@map("chats")
  @@schema("public")
}

model Message {
  id         String   @id @default(uuid()) @db.Uuid
  chat_id    String   @db.Uuid
  role       String
  content    String
  created_at DateTime @default(now()) @db.Timestamptz
  chat       Chat     @relation(fields: [chat_id], references: [id])

  @@map("messages")
  @@schema("public")
}

model ChatHistory {
  id         String    @id @default(uuid()) @db.Uuid
  user_id    String?   @db.Uuid
  title      String
  messages   Json
  created_at DateTime? @default(now()) @db.Timestamptz
  updated_at DateTime? @updatedAt @db.Timestamptz
  user       User?     @relation(fields: [user_id], references: [id])

  @@map("chat_history")
  @@schema("public")
}

model Transaction {
  id          String   @id @default(uuid()) @db.Uuid
  user_id     String   @db.Uuid
  type        String
  amount      Int
  description String
  status      String
  created_at  DateTime @default(now()) @db.Timestamptz
  updated_at  DateTime @updatedAt @db.Timestamptz
  user        User     @relation(fields: [user_id], references: [id])

  @@map("transactions")
  @@schema("public")
} 